UnitSafeEntrypoint::constructor
└── when passing valid parameters
    ├── it sets safe address
    ├── it sets multiSendCallOnly address
    ├── it sets short execution delay
    ├── it sets long execution delay
    └── it set transaction expiry delay


UnitSafeEntrypoint::approveActionsBuilder
├── when caller is safe
│   ├── it sets approval expiry time
│   ├── it emits ActionsBuilderApproved event
│   └── when extending approval
│       ├── it updates approval expiry time
│       └── it emits ActionsBuilderApproved event
└── when caller is not safe
    └── it reverts with NotSafeOwner


UnitSafeEntrypoint::queueTransaction
├── when caller is safe owner
│   ├── when queueing pre approved action
│   │   ├── it sets transaction info
│   │   ├── it sets executable time at block timestamp plus short delay
│   │   ├── it sets expiry time at executable time plus expiry delay
│   │   └── it emits TransactionQueued event
│   └── when queueing not approved action
│       ├── it sets transaction info
│       ├── it sets executable time at block timestamp plus long delay
│       ├── it sets expiry time at executable time plus expiry delay
│       └── it emits TransactionQueued event
├── when transaction is already queued but expired
│   └── it should queue the transaction
├── when caller is not safe owner
│   └── it reverts with NotSafeOwner
└── when transaction is already queued and not expired
    └── it reverts with TransactionAlreadyQueued


UnitSafeEntrypoint::queueHubTransaction
├── when hub is not a child
│   └── it reverts with InvalidHubOrActionsBuilder
├── when caller is safe owner
│   ├── when queueing pre approved action
│   │   ├── it sets transaction info
│   │   ├── it sets executable at to block timestamp plus short delay
│   │   ├── it sets expiry time
│   │   └── it emits TransactionQueued event
│   └── when queueing not approved action
│       ├── it sets transaction info
│       ├── it sets executable at to block timestamp plus long delay
│       ├── it sets expiry time
│       └── it emits TransactionQueued event
├── when transaction is already queued but expired
│   └── it should queue the transaction
├── when caller is not safe owner
│   └── it reverts with NotSafeOwner
└── when transaction is already queued and not expired
    └── it reverts with TransactionAlreadyQueued


UnitSafeEntrypoint::executeTransaction
├── when transaction is expired
│   └── it reverts with TransactionExpired
├── when approved transaction is not yet executable
│   └── it reverts with TransactionNotYetExecutable
├── when transaction is not queued
│   └── it reverts with TransactionNotQueued
└── when approved transaction is valid
    ├── it executes transaction
    ├── it deletes transaction from queue
    └── it emits TransactionExecuted event


UnitSafeEntrypoint::getSafeTransactionHash
├── when transaction exists
│   ├── it returns correct hash
│   └── when getting hash with nonce
│       └── it returns correct hash
└── when transaction does not exist
    └── it reverts with NoTransactionQueued


UnitSafeEntrypoint::getApprovedHashSigners
├── when transaction exists
│   ├── when getting signers with actionsBuilder
│   │   └── it returns approved signers
│   ├── when getting signers with actionsBuilder and nonce
│   │   └── it returns approved signers
│   └── when getting signers with hash
│       └── it returns approved signers
└── when transaction does not exist
    └── it reverts with NoTransactionQueued

UnitSafeEntrypoint::getSafeNonce
└── it returns correct nonce